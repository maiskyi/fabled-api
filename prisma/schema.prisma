// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  isAdmin   Boolean   @default(true)
  createdAt DateTime? @default(now())
}

model Feedback {
  id             String    @id @default(cuid())
  firebaseUserId String    @default("")
  email          String    @default("")
  rating         Int
  comment        String    @default("")
  createdAt      DateTime? @default(now())
}

model Story {
  id                String                @id @default(cuid())
  firebaseUserId    String                @default("")
  deviceId          String                @default("")
  parent            Story?                @relation("Story_parent", fields: [parentId], references: [id])
  parentId          String?               @map("parent")
  prompt            Prompt?               @relation("Story_prompt", fields: [promptId], references: [id])
  promptId          String?               @map("prompt")
  character         Character?            @relation("Story_character", fields: [characterId], references: [id])
  characterId       String?               @map("character")
  placeOfEvent      PlaceOfEvent?         @relation("Story_placeOfEvent", fields: [placeOfEventId], references: [id])
  placeOfEventId    String?               @map("placeOfEvent")
  moralLesson       MoralLesson?          @relation("Story_moralLesson", fields: [moralLessonId], references: [id])
  moralLessonId     String?               @map("moralLesson")
  childName         String                @default("")
  childAge          Decimal?              @postgresql.Decimal(2, 0)
  childGender       StoryChildGenderType?
  title             String                @default("")
  content           String                @default("")
  image             Json?
  readTime          Int
  status            StoryStatusType?      @default(inprogress)
  statusLog         Json                  @default("[\"initialized\"]")
  contentPrompt     String                @default("contentPrompt")
  imagePrompt       String                @default("imagePrompt")
  message           String                @default("message")
  createdAt         DateTime?             @default(now())
  from_Story_parent Story[]               @relation("Story_parent")

  @@index([parentId])
  @@index([promptId])
  @@index([characterId])
  @@index([placeOfEventId])
  @@index([moralLessonId])
  @@index([childName])
  @@index([childAge])
  @@index([childGender])
  @@index([title])
}

model Inquiry {
  id        String    @id @default(cuid())
  email     String    @default("")
  subject   String    @default("")
  message   String    @default("")
  createdAt DateTime? @default(now())
}

model Character {
  id                   String                @id @default(cuid())
  title                String                @default("")
  emoji                String                @default("")
  description          String                @default("")
  image                Json?
  language             CharacterLanguageType
  isPublished          Boolean               @default(false)
  createdAt            DateTime?             @default(now())
  from_Story_character Story[]               @relation("Story_character")
}

model MoralLesson {
  id                     String                  @id @default(cuid())
  title                  String                  @default("")
  emoji                  String                  @default("")
  description            String                  @default("")
  language               MoralLessonLanguageType
  isPublished            Boolean                 @default(false)
  createdAt              DateTime?               @default(now())
  from_Story_moralLesson Story[]                 @relation("Story_moralLesson")
}

model PlaceOfEvent {
  id                      String                   @id @default(cuid())
  title                   String                   @default("")
  emoji                   String                   @default("")
  image                   Json?
  prompt                  Prompt?                  @relation("PlaceOfEvent_prompt", fields: [promptId], references: [id])
  promptId                String?                  @map("prompt")
  language                PlaceOfEventLanguageType
  isPublished             Boolean                  @default(false)
  createdAt               DateTime?                @default(now())
  from_Story_placeOfEvent Story[]                  @relation("Story_placeOfEvent")

  @@index([promptId])
}

model Prompt {
  id                       String             @id @default(cuid())
  title                    String             @default("")
  message                  String             @default("")
  textPrompt               String             @default("")
  imagePrompt              String             @default("")
  language                 PromptLanguageType
  isPublished              Boolean            @default(true)
  createdAt                DateTime?          @default(now())
  from_Story_prompt        Story[]            @relation("Story_prompt")
  from_PlaceOfEvent_prompt PlaceOfEvent[]     @relation("PlaceOfEvent_prompt")
}

model Config {
  id                    Int    @id
  privacyPolicyUrl      String @default("")
  termsAndConditionsUrl String @default("")
}

enum StoryChildGenderType {
  boy
  girl
}

enum StoryStatusType {
  inprogress
  success
  failed
}

enum CharacterLanguageType {
  en
}

enum MoralLessonLanguageType {
  en
}

enum PlaceOfEventLanguageType {
  en
}

enum PromptLanguageType {
  en
}
